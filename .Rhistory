cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=5000, interaction.depth=3,shrinkage =0.02, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=5000, interaction.depth=3,shrinkage =0.05, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=5000, interaction.depth=3,shrinkage =0.03, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=5000, interaction.depth=3,shrinkage =0.02, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = train, distribution="bernoulli",n.trees=5000, interaction.depth=3,shrinkage =0.02, verbose =F)
boost.prediction <- predict(boost, test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
boost.submit <- data.frame(PassengerId = test$PassengerId, Survived = boost.prediction.b)
write.csv(submit, file = "boost.csv", row.names = FALSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=5000, interaction.depth=3,shrinkage =0.001, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
plot(boost.boston ,i="lstat")
library(ISLR)
fix(Hitters)
names(Hitters)
dim(Hitters)
sum(is.na(Hitters$Salary))
sum(is.na(Hitters$Salary))
Hitters
head(Hitters)
sum(is.na(Hitters$Salary))
dim(Hitters)
sum(is.na(Hitters$Salary))
Hitters=na.omit(Hitters)
sum(is.na(Hitters$Salary))
Hitters$Salary_log <- log(Hitters$Salary)
Hitters.train <- Hitters[1:200,]
Hitters.test <- Hitters[-(1:200),]
dim(Hitters.train)
dim(Hitters.test)
dim(Hitters)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=5000, interaction.depth=1,shrinkage =0.02, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=10000, interaction.depth=1,shrinkage =0.02, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=10000, interaction.depth=1,shrinkage =0.01, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=10000, interaction.depth=1,shrinkage =0.03, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = train, distribution="bernoulli",n.trees=10000, interaction.depth=1,shrinkage =0.02, verbose =F)
boost.prediction <- predict(boost, test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
boost.submit <- data.frame(PassengerId = test$PassengerId, Survived = boost.prediction.b)
write.csv(submit, file = "boost.csv", row.names = FALSE)
boost.submit
sum(boost.submit$Survived)
boost.prediction.2 <- predict(boost, test, type = "response",n.trees=10000)
boost.prediction.b.2 <- round(boost.prediction)
boost.submit.2 <- data.frame(PassengerId = test$PassengerId, Survived = boost.prediction.b)
sum(boost.submit.2$Survived)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=10000, interaction.depth=1,shrinkage =0.02, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=10000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=10000, interaction.depth=1,shrinkage =0.02, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=10000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=10000, interaction.depth=1,shrinkage =0.02, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=10000, interaction.depth=1,shrinkage =0.02, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost.prediction.2 <- predict(boost, test, type = "response",n.trees=5000)
boost.prediction.b.2 <- round(boost.prediction)
boost.submit.2 <- data.frame(PassengerId = test$PassengerId, Survived = boost.prediction.b)
write.csv(submit, file = "boost.csv", row.names = FALSE)
boost.prediction.train <- predict(boost, train, type = "response",n.trees=5000)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = train, distribution="bernoulli",n.trees=10000, interaction.depth=1,shrinkage =0.02, verbose =F)
boost.prediction.2 <- predict(boost, test, type = "response",n.trees=5000)
boost.prediction.b.2 <- round(boost.prediction)
boost.submit.2 <- data.frame(PassengerId = test$PassengerId, Survived = boost.prediction.b)
boost.prediction.train <- predict(boost, train, type = "response",n.trees=5000)
boost.prediction.train
boost.prediction.train <- round(predict(boost, train, type = "response",n.trees=5000))
MSE <- sum(abs(train$Survived-boost.prediction.train))/length(boost.prediction.b)
MSE <- sum(abs(train$Survived-boost.prediction.train))/length(boost.prediction.b)
MSE
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = train, type="class",distribution="bernoulli",n.trees=10000, interaction.depth=1,shrinkage =0.02, verbose =F)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = train, distribution="bernoulli",n.trees=10000, interaction.depth=1,shrinkage =0.02, verbose =F)
boost.prediction.train <- round(predict(boost, train, type = "class",n.trees=5000))
boost.prediction.train <- round(predict(boost, train, type = "response",n.trees=10000))
boost.prediction.train
MSE <- sum(abs(train$Survived-boost.prediction.train))/length(boost.prediction.b)
cat("MSE:",MSE)
MSE <- sum(abs(train$Survived-boost.prediction.train))/length(boost.prediction.train)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = train, distribution="bernoulli",n.trees=10000, interaction.depth=1,shrinkage =0.01, verbose =F)
boost.prediction.train <- round(predict(boost, train, type = "response",n.trees=10000))
MSE <- sum(abs(train$Survived-boost.prediction.train))/length(boost.prediction.train)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = train, distribution="bernoulli",n.trees=10000, interaction.depth=2,shrinkage =0.02, verbose =F)
boost.prediction.train <- round(predict(boost, train, type = "response",n.trees=10000))
MSE <- sum(abs(train$Survived-boost.prediction.train))/length(boost.prediction.train)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = train, distribution="bernoulli",n.trees=10000, interaction.depth=3,shrinkage =0.02, verbose =F)
boost.prediction.train <- round(predict(boost, train, type = "response",n.trees=10000))
MSE <- sum(abs(train$Survived-boost.prediction.train))/length(boost.prediction.train)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = train, distribution="bernoulli",n.trees=10000, interaction.depth=4,shrinkage =0.02, verbose =F)
boost.prediction.train <- round(predict(boost, train, type = "response",n.trees=10000))
MSE <- sum(abs(train$Survived-boost.prediction.train))/length(boost.prediction.train)
cat("MSE:",MSE)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=10000, interaction.depth=4,shrinkage =0.02, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=10000, interaction.depth=5,shrinkage =0.02, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=10000, interaction.depth=3,shrinkage =0.02, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=10000, interaction.depth=3,shrinkage =0.01, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=10000, interaction.depth=2,shrinkage =0.01, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=10000, interaction.depth=2,shrinkage =0.001, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = fold.train, distribution="bernoulli",n.trees=10000, interaction.depth=3,shrinkage =0.01, verbose =F)
boost.prediction <- predict(boost, fold.test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = train, distribution="bernoulli",n.trees=10000, interaction.depth=3,shrinkage =0.01, verbose =F)
boost.prediction <- predict(boost, test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
MSE <- sum(abs(fold.test$Survived-boost.prediction.b))/length(boost.prediction.b)
cat("MSE:",MSE)
boost.prediction.train <- predict(boost, test, type = "response",n.trees=5000)
boost.prediction.train.b <- round(boost.prediction)
MSE <- sum(abs(train$Survived-boost.prediction.train.b))/length(boost.prediction.train.b)
cat("MSE:",MSE)
boost.prediction.train.b
as.vector(train$Survived)
boost.prediction.train <- predict(boost, train, type = "response",n.trees=5000)
boost.prediction.train.b <- round(boost.prediction)
MSE <- sum(abs(train$Survived-boost.prediction.train.b))/length(boost.prediction.train.b)
cat("MSE:",MSE)
boost.prediction.train <- predict(boost, train, type = "response",n.trees=5000)
boost.prediction.train <- predict(boost, train, type = "response",n.trees=10000)
boost.prediction.train <- predict(boost, train, type = "response",n.trees=10000)
boost.prediction.train.b <- round(boost.prediction.train)
MSE <- sum(abs(train$Survived-boost.prediction.train.b))/length(boost.prediction.train.b)
cat("MSE:",MSE)
boost.submit <- data.frame(PassengerId = test$PassengerId, Survived = boost.prediction.b)
write.csv(submit, file = "boost.csv", row.names = FALSE)
boost <- gbm(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = train, distribution="bernoulli",n.trees=10000, interaction.depth=3,shrinkage =0.01, verbose =F)
boost.prediction <- predict(boost, test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
boost.prediction.train <- predict(boost, train, type = "response",n.trees=10000)
boost.prediction.train.b <- round(boost.prediction.train)
MSE <- sum(abs(train$Survived-boost.prediction.train.b))/length(boost.prediction.train.b)
cat("MSE:",MSE)
boost.prediction.train.b <- (boost.prediction.train)
MSE <- sum(abs(train$Survived-boost.prediction.train.b))/length(boost.prediction.train.b)
cat("MSE:",MSE)
boost.prediction.train
boost
summary(boost)
summary(boost)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = train, distribution="bernoulli",n.trees=10000, interaction.depth=3,shrinkage =0.01, verbose =F)
summary(boost)
seq(1, 100, by=2)
seq(1, 100, by=0.01)
seq(1, 2, by=0.01)
seq(0, 2, by=0.01)
seq(0, 2, by=0.05)
l <- seq(0, 2, by=0.05)
log (l)
l <- seq(1, 2, by=0.05)
log (l)
l <- seq(1, 2, by=0.01)
log (l)
round(log (l),4)
round(log (l),2)
unique(round(log (l),2))
unique(round(log(seq(1,2,0.01)),2))
unique(round(log(seq(1,3,0.01)),2))
unique(round(log(seq(1,5,0.01)),2))
unique(round(log(seq(1,6,0.01)),2))
unique(round((seq(0,6,0.01)^2),2))
unique(round((seq(0,2,0.01)^2),2))
plot(unique(round((seq(0,2,0.01)^2),2)))
plot(unique(round((seq(0,sqrt(2),0.01)^2),2)))
plot(unique(10^(1/(seq(-4,-1,0.5))),2)))
plot(unique(10^(1/(seq(-4,-1,0.5)))))
plot(unique(10^(1/(seq(-1,-4,-0.5)))))
(unique(10^(1/(seq(-1,-4,-0.5)))))
(unique(10^(1/(seq(-1,-4,-1)))))
source('~/.active-rstudio-document', echo=TRUE)
(unique(10^(seq(-1,-4,-1))))
plot(unique(10^(seq(-1,-4,-1))))
plot(unique(10^(seq(-4,-1,-1))))
plot(unique(10^(seq(-4,-1,1))))
(unique(10^(seq(-4,-1,1))))
as.factor(unique(10^(seq(-4,-1,1))))
as.double(unique(10^(seq(-4,-1,1))))
(unique(10^(seq(-4,-1,1))))
as.float(unique(10^(seq(-4,-1,1))))
(unique(10^(seq(-4,-1,1))))
plot(unique(10^(seq(-4,-1,1))))
for lambda in c(0.001,0.005,0.01,0.05,0.1,0.2) {
#boost <- gbm(Salary_log ~ .-Salary, data=Hitters, distribution="gaussian",n.trees=1000, shrinkage = lambda)
print(lambda)
}
for (lambda in c(0.001,0.005,0.01,0.05,0.1,0.2)) {
#boost <- gbm(Salary_log ~ .-Salary, data=Hitters, distribution="gaussian",n.trees=1000, shrinkage = lambda)
print(lambda)
}
boost <- gbm(Salary_log ~ .-Salary, data=Hitters, distribution="gaussian",n.trees=1000, shrinkage = lambda)
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = lambda)
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE <- (Hitters.train$Salary_log-Salary_log.predict)/length(Salary_log.predict)
cat('MSE:',MSE)
MSE <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('MSE:',MSE)
for (lambda in c(0.001,0.005,0.01,0.05,0.1,0.2)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = lambda)
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('MSE:',MSE)
}
for (lambda in c(0.001,0.005,0.01,0.05,0.1,0.2)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = lambda)
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',lambda)
cat('MSE:',MSE)
}
for (lambda in c(0.001,0.005,0.01,0.05,0.1,0.2)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = lambda)
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',lambda,'\n')
cat('MSE:',MSE,'\n')
}
for (lambda in c(0.001,0.005,0.01,0.05,0.1,0.2,0.3)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = lambda)
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',lambda,'\n')
cat('MSE:',MSE,'\n')
}
for (lambda in c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = lambda)
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',lambda,'\n')
cat('MSE:',MSE,'\n')
}
for (lambda in c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = lambda)
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',lambda,'\n')
cat('MSE:',MSE,'\n')
}
for (lambda in c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1,5)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = lambda)
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',lambda,'\n')
cat('MSE:',MSE,'\n')
}
for (lambda in c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1,2)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = lambda)
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',lambda,'\n')
cat('MSE:',MSE,'\n')
}
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = train, distribution="bernoulli",n.trees=10000, interaction.depth=3,shrinkage =2, verbose =F)
boost.prediction <- predict(boost, test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
boost.prediction.train <- predict(boost, train, type = "response",n.trees=10000)
boost.prediction.train.b <- (boost.prediction.train)
MSE <- sum(abs(train$Survived-boost.prediction.train.b))/length(boost.prediction.train.b)
cat("MSE:",MSE)
boost <- gbm(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID, data = train, distribution="bernoulli",n.trees=10000, interaction.depth=3,shrinkage =0.02, verbose =F)
boost.prediction <- predict(boost, test, type = "response",n.trees=5000)
boost.prediction.b <- round(boost.prediction)
boost.prediction.train <- predict(boost, train, type = "response",n.trees=10000)
boost.prediction.train.b <- (boost.prediction.train)
MSE <- sum(abs(train$Survived-boost.prediction.train.b))/length(boost.prediction.train.b)
cat("MSE:",MSE)
labda_set <- c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1,2)
for (i in 1:length(labda_set) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE[i] <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE[i],'\n')
}
for (i in 1:length(labda_set) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE[i] <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE[i],'\n')
}
for (i in 1:length(labda_set)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE[i] <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE[i],'\n')
}
plot(MSE~labda_set)
labda_set <- c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1)
for (i in 1:length(labda_set)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE[i] <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE[i],'\n')
}
plot(MSE~labda_set)
labda_set
MSE
labda_set <- c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1)
rm(MSE)
for (i in 1:length(labda_set)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE[i] <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE[i],'\n')
}
plot(MSE~labda_set)
labda_set <- c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1)
MSE <- ()
labda_set <- c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1)
MSE <- {}
labda_set <- c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1)
MSE <- {}
for (i in 1:length(labda_set)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict <- predict(boost,data=Hitters.train,n.trees=1000)
MSE[i] <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE[i],'\n')
}
plot(MSE~labda_set)
plot(MSE~labda_set,type='l')
plot(MSE~labda_set,type='l',col='red')
labda_set <- c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1)
MSE <- {}
for (i in 1:length(labda_set)) {
boost[i] <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict <- predict(boost[i],data=Hitters.train,n.trees=1000)
MSE[i] <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE[i],'\n')
}
plot(MSE~labda_set,type='l',col='red')
labda_set <- c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1)
MSE <- {}
for (i in 1:length(labda_set)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict[i] <- predict(boost,data=Hitters.train,n.trees=1000)
MSE_train[i] <- sum((Hitters.train$Salary_log-Salary_log.predict[i])^2)/length(Salary_log.predict[i])
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE_train[i],'\n')
}
plot(MSE_train~labda_set,type='l',col='red')
length(Salary_log.predict[i])
labda_set <- c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1)
MSE_train <- {}
for (i in 1:length(labda_set)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict[i] <- predict(boost,data=Hitters.train,n.trees=1000)
MSE_train[i] <- sum((Hitters.train$Salary_log-Salary_log.predict[i])^2)/length(Salary_log.predict[i])
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE_train[i],'\n')
}
plot(MSE_train~labda_set,type='l',col='red')
labda_set <- c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1)
MSE_train <- {}
for (i in 1:length(labda_set)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict.train <- predict(boost,data=Hitters.train,n.trees=1000)
MSE_train[i] <- sum((Hitters.train$Salary_log-Salary_log.predict)^2)/length(Salary_log.predict)
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE_train[i],'\n')
}
plot(MSE_train~labda_set,type='l',col='red')
labda_set <- c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1)
MSE_train <- {}
for (i in 1:length(labda_set)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict.train <- predict(boost,data=Hitters.train,n.trees=1000)
MSE_train[i] <- sum((Hitters.train$Salary_log-Salary_log.predict.train)^2)/length(Salary_log.predict.train)
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE_train[i],'\n')
}
plot(MSE_train~labda_set,type='l',col='red')
labda_set <- c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1)
MSE_train <- {}
MSE_test <- {}
for (i in 1:length(labda_set)) {
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict.train <- predict(boost,data=Hitters.train,n.trees=1000)
MSE_train[i] <- sum((Hitters.train$Salary_log-Salary_log.predict.train)^2)/length(Salary_log.predict.train)
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE_train[i],'\n')
Salary_log.predict.test <- predict(boost,data=Hitters.test,n.trees=1000)
MSE_test[i] <- sum((Hitters.train$Salary_log-Salary_log.predict.test)^2)/length(Salary_log.predict.test)
cat('MSE:',MSE_test[i],'\n')
}
plot(MSE_train~labda_set,type='l',col='red')
plot(MSE_test~labda_set,type='l',col='red')
Salary_log.predict.test
Salary_log.predict.train
Hitters.test
Hitters.train
Salary_log.predict.test <- predict(boost,data=Hitters.test,n.trees=1000)
MSE_test[i] <- sum((Hitters.test$Salary_log-Salary_log.predict.test)^2)/length(Salary_log.predict.test)
cat('MSE:',MSE_test[i],'\n')
boost <- gbm(Salary_log ~ .-Salary, data=Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict.train <- predict(boost,data=Hitters.train,n.trees=1000)
MSE_train[i] <- sum((Hitters.train$Salary_log-Salary_log.predict.train)^2)/length(Salary_log.predict.train)
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE_train[i],'\n')
Salary_log.predict.test <- predict(boost,data=Hitters.test,n.trees=1000)
MSE_test[i] <- sum((Hitters.test$Salary_log-Salary_log.predict.test)^2)/length(Salary_log.predict.test)
cat('MSE:',MSE_test[i],'\n')
boost <- gbm(Salary_log ~ .-Salary, Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict.train <- predict(boost,data=Hitters.train,n.trees=1000)
MSE_train[i] <- sum((Hitters.train$Salary_log-Salary_log.predict.train)^2)/length(Salary_log.predict.train)
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE_train[i],'\n')
Salary_log.predict.test <- predict(boost,Hitters.test,n.trees=1000)
MSE_test[i] <- sum((Hitters.test$Salary_log-Salary_log.predict.test)^2)/length(Salary_log.predict.test)
cat('MSE:',MSE_test[i],'\n')
labda_set <- c(0.001,0.005,0.01,0.05,0.1,0.2,0.3,0.4,1)
MSE_train <- {}
MSE_test <- {}
for (i in 1:length(labda_set)) {
boost <- gbm(Salary_log ~ .-Salary, Hitters.train, distribution="gaussian",n.trees=1000, shrinkage = labda_set[i])
Salary_log.predict.train <- predict(boost,data=Hitters.train,n.trees=1000)
MSE_train[i] <- sum((Hitters.train$Salary_log-Salary_log.predict.train)^2)/length(Salary_log.predict.train)
cat('lambda:',labda_set[i],'\n')
cat('MSE:',MSE_train[i],'\n')
Salary_log.predict.test <- predict(boost,Hitters.test,n.trees=1000)
MSE_test[i] <- sum((Hitters.test$Salary_log-Salary_log.predict.test)^2)/length(Salary_log.predict.test)
cat('MSE:',MSE_test[i],'\n')
}
plot(MSE_train~labda_set,type='l',col='red')
plot(MSE_test~labda_set,type='l',col='red')
summary(boost)
